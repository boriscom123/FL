!function(t){var o={};function r(n){if(o[n])return o[n].exports;var e=o[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,r),e.l=!0,e.exports}r.m=t,r.c=o,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="",r(r.s="./js/main.js")}({"./js/main.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ie-fix */ "./js/utils/ie-fix.js");\n/* harmony import */ var _utils_phone_mask__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/phone-mask */ "./js/utils/phone-mask.js");\n/* harmony import */ var _modules_video_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/video-controller */ "./js/modules/video-controller.js");\n/* harmony import */ var _modules_features_slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/features-slider */ "./js/modules/features-slider.js");\n/* harmony import */ var _modules_product_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/product-selection */ "./js/modules/product-selection.js");\n/* harmony import */ var _utils_autocomplete__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/autocomplete */ "./js/utils/autocomplete.js");\n/* harmony import */ var _modules_init_modals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/init-modals */ "./js/modules/init-modals.js");\n\n\n\n\n\n\n // Utils\n// ---------------------------------\n\nObject(_utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__["ieFix"])();\nObject(_utils_phone_mask__WEBPACK_IMPORTED_MODULE_1__["initPhoneMask"])();\n_utils_autocomplete__WEBPACK_IMPORTED_MODULE_5__["location"].init(); // Modules\n// ---------------------------------\n\nObject(_modules_video_controller__WEBPACK_IMPORTED_MODULE_2__["controlVideo"])();\nObject(_modules_features_slider__WEBPACK_IMPORTED_MODULE_3__["checkFeaturesSlider"])();\nObject(_modules_product_selection__WEBPACK_IMPORTED_MODULE_4__["selectProduct"])();\nObject(_modules_init_modals__WEBPACK_IMPORTED_MODULE_6__["initModals"])();\n\n//# sourceURL=webpack:///./js/main.js?')},"./js/modules/features-slider.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkFeaturesSlider\", function() { return checkFeaturesSlider; });\nvar breakpoint = window.matchMedia('(max-width:1024px)');\nvar swiper;\n\nvar breakpointChecker = function breakpointChecker() {\n  if (breakpoint.matches === false) {\n    if (swiper !== undefined) swiper.destroy(true, true);\n    return;\n  } else if (breakpoint.matches === true) {\n    return initFeaturesSlider();\n  }\n};\n\nvar initFeaturesSlider = function initFeaturesSlider() {\n  swiper = new Swiper('.features__slider', {\n    pagination: {\n      el: '.features__pagination',\n      type: \"bullets\"\n    },\n    slidesPerView: 'auto'\n  });\n};\n\nvar checkFeaturesSlider = function checkFeaturesSlider() {\n  breakpoint.addEventListener('change', breakpointChecker);\n  breakpointChecker();\n};\n\n//# sourceURL=webpack:///./js/modules/features-slider.js?")},"./js/modules/init-modals.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initModals\", function() { return initModals; });\n/* harmony import */ var _utils_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/modal */ \"./js/utils/modal.js\");\n/* harmony import */ var _utils_form_validation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/form-validation */ \"./js/utils/form-validation.js\");\n/* harmony import */ var _modules_product_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/product-selection */ \"./js/modules/product-selection.js\");\n\n\n\nvar Selectors = {\n  GROUP: {\n    BULK_AND_FLAT: '.form-input--bulk, .form-input--flat',\n    STREET_BULK_HOUSE_PRIVATE_AND_FLAT: '.form-input--street, .form-input--house, .form-input--bulk, .form-input--flat, .form-input--private-house'\n  },\n  HIDING: {\n    FORM_INPUT: 'form-input--hidden',\n    NONSTANDARD_ADDRESS: 'modal__address-nonstandard-textarea--hidden'\n  }\n};\nvar modals = document.querySelectorAll('.modal');\nvar modalFeedback = document.querySelector('.modal--feedback');\nvar modalFeedbackForm = document.querySelector('.modal--feedback form');\nvar modalFeedbackInputs = modalFeedbackForm.querySelectorAll('.form-input input');\nvar modalFeedbackOpenBtns = document.querySelectorAll('[data-modal=\"feedback\"]');\nvar modalOrder = document.querySelector('.modal--order');\nvar modalOrderForm = document.querySelector('.modal--order form');\nvar modalOrderInputs = modalOrderForm.querySelectorAll('.form-input input');\nvar modalOrderNonstandardAddress = document.querySelector('.modal__address-nonstandard-textarea');\nvar modalOrderAddressTextarea = document.querySelector('textarea[name=\"nonstandard-address\"]');\nvar modalOrderOpenBtns = document.querySelectorAll('[data-modal=\"order\"]');\nvar modalSuccess = document.querySelector('.modal--success');\nvar checkboxPrivateHouse = document.getElementById('modal__order-private-house');\nvar checkboxNonstandardAddress = document.getElementById('modal__order-private-nonstandard');\nvar orderFormValidation = new _utils_form_validation__WEBPACK_IMPORTED_MODULE_1__[\"FormValidation\"](modalOrderForm, modalOrderInputs, modalOrderAddressTextarea);\nvar feedbackFormValidation = new _utils_form_validation__WEBPACK_IMPORTED_MODULE_1__[\"FormValidation\"](modalFeedbackForm, modalFeedbackInputs);\n\nvar addRequired = function addRequired(inputElement) {\n  if (!inputElement.required) {\n    inputElement.required = true;\n  }\n};\n\nvar removeRequired = function removeRequired(inputElement) {\n  if (inputElement.required) {\n    inputElement.required = false;\n  }\n};\n\nvar uncheckAllCheckboxes = function uncheckAllCheckboxes(parent, except) {\n  var checkboxes = parent.querySelectorAll('input[type=\"checkbox\"]');\n\n  if (checkboxes.length > 0) {\n    checkboxes.forEach(function (checkbox) {\n      if (checkbox === except) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    });\n  }\n};\n\nvar hideInputs = function hideInputs(parent, nodeListSelector, hidingSelector) {\n  var inputs = parent.querySelectorAll(nodeListSelector);\n\n  if (inputs.length > 0) {\n    inputs.forEach(function (element) {\n      var inputElement = element.querySelector('input');\n      element.classList.add(hidingSelector);\n      inputElement.value = '';\n      removeRequired(inputElement);\n    });\n  }\n};\n\nvar showInputs = function showInputs(parent, nodeListSelector, hidingSelector) {\n  var inputs = parent.querySelectorAll(nodeListSelector);\n\n  if (inputs.length > 0) {\n    inputs.forEach(function (element) {\n      var inputElement = element.querySelector('input');\n      element.classList.remove(hidingSelector);\n\n      if (inputElement.type !== 'checkbox') {\n        addRequired(inputElement);\n      }\n    });\n  }\n};\n\nvar onHouseOnlyCheck = function onHouseOnlyCheck() {\n  hideInputs(modalOrderForm, Selectors.GROUP.BULK_AND_FLAT, Selectors.HIDING.FORM_INPUT);\n};\n\nvar onHouseOnlyUnCheck = function onHouseOnlyUnCheck() {\n  showInputs(modalOrderForm, Selectors.GROUP.BULK_AND_FLAT, Selectors.HIDING.FORM_INPUT);\n};\n\nvar onNonStandardCheck = function onNonStandardCheck() {\n  hideInputs(modalOrderForm, Selectors.GROUP.STREET_BULK_HOUSE_PRIVATE_AND_FLAT, Selectors.HIDING.FORM_INPUT);\n  uncheckAllCheckboxes(modalOrder, checkboxNonstandardAddress);\n  modalOrderNonstandardAddress.classList.remove(Selectors.HIDING.NONSTANDARD_ADDRESS);\n  addRequired(modalOrderAddressTextarea);\n};\n\nvar onNonStandardUncheck = function onNonStandardUncheck() {\n  showInputs(modalOrderForm, Selectors.GROUP.STREET_BULK_HOUSE_PRIVATE_AND_FLAT, Selectors.HIDING.FORM_INPUT);\n  modalOrderNonstandardAddress.classList.add(Selectors.HIDING.NONSTANDARD_ADDRESS);\n  removeRequired(modalOrderAddressTextarea);\n  modalOrderAddressTextarea.value = '';\n};\n\nvar showSuccess = function showSuccess(modal, modalFormValidation) {\n  Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__[\"closeModal\"])(modal, function () {\n    Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__[\"openModal\"])(modalSuccess);\n\n    if (modal === modalOrder) {\n      onNonStandardUncheck();\n    }\n\n    modalFormValidation.removeAllErrors();\n    modalFormValidation.clearAllValues();\n    uncheckAllCheckboxes(modal);\n  });\n};\n\nvar setCorrespondingProductColor = function setCorrespondingProductColor(productBlock, modal) {\n  var mainProductRadio = productBlock.querySelectorAll('.products-block__color input');\n  var modalProductBlock = modal.querySelector('.modal__product-block');\n  var modalProductRadio = modal.querySelectorAll('.products-block__color input');\n  mainProductRadio.forEach(function (input) {\n    if (input.checked) {\n      var correspondingModalInput = Array.from(modalProductRadio).filter(function (elem) {\n        return elem.dataset.color === input.dataset.color;\n      })[0];\n      correspondingModalInput.checked = input.checked;\n      Object(_modules_product_selection__WEBPACK_IMPORTED_MODULE_2__[\"changeProduct\"])(modalProductBlock, correspondingModalInput.dataset.color);\n    }\n  });\n};\n\nvar onModalOpen = function onModalOpen(modalFormValidation, btn, modal) {\n  var productBlock = btn.closest('.products-block') ? btn.closest('.products-block') : '';\n  modalFormValidation.onCheckbox(checkboxPrivateHouse, onHouseOnlyCheck, onHouseOnlyUnCheck);\n  modalFormValidation.onCheckbox(checkboxNonstandardAddress, onNonStandardCheck, onNonStandardUncheck);\n  modalFormValidation.init(showSuccess);\n\n  if (productBlock && productBlock.classList.contains('products-block--mop')) {\n    setCorrespondingProductColor(productBlock, modal);\n  }\n};\n\nvar onModalClose = function onModalClose(modal, modalFormValidation) {\n  modalFormValidation.removeAllErrors();\n  modalFormValidation.clearAllValues();\n  uncheckAllCheckboxes(modal);\n\n  if (modal === modalOrder) {\n    onNonStandardUncheck();\n  }\n};\n\nvar initModals = function initModals() {\n  window.addEventListener('load', function () {\n    if (modals.length) {\n      modals.forEach(function (el) {\n        setTimeout(function () {\n          el.classList.remove('modal--preload');\n        }, 100);\n      });\n    }\n  });\n\n  if (modalOrder && modalOrderOpenBtns.length) {\n    Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__[\"setupModal\"])(modalOrder, onModalClose, modalOrderOpenBtns, onModalOpen, false, orderFormValidation);\n  }\n\n  if (modalFeedback && modalFeedbackOpenBtns.length) {\n    Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__[\"setupModal\"])(modalFeedback, false, modalFeedbackOpenBtns, onModalOpen, false, feedbackFormValidation);\n  }\n\n  if (modalSuccess) {\n    Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__[\"setupModal\"])(modalSuccess, false);\n  }\n};\n\n\n\n//# sourceURL=webpack:///./js/modules/init-modals.js?")},"./js/modules/product-selection.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectProduct\", function() { return selectProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeProduct\", function() { return changeProduct; });\nvar productBlock = document.querySelector('#products');\nvar productItems = productBlock.querySelectorAll('.products-block');\nvar productColorsElModal = document.querySelector('.modal__product-block-color');\nvar productColorsModal = productColorsElModal.querySelectorAll('ul li');\n\nvar changeModalProductDescription = function changeModalProductDescription(productNode, productDescription) {\n  var currentModalDescription = productNode.querySelector('.modal__product-custom-description');\n\n  if (currentModalDescription) {\n    currentModalDescription.innerText = productDescription;\n  }\n};\n\nvar changeProduct = function changeProduct(currentProductBlock, input) {\n  currentProductBlock.querySelectorAll('.products-block__picture').forEach(function (photo) {\n    if (photo.dataset.color === input) {\n      photo.style.display = 'block';\n      changeModalProductDescription(currentProductBlock, photo.dataset.description);\n    } else {\n      photo.style.display = 'none';\n    }\n  });\n};\n\nvar changeProductListener = function changeProductListener(colorsList, element) {\n  colorsList.forEach(function (color) {\n    color.addEventListener('click', function () {\n      var selectColor = color.querySelector('input').dataset.color;\n      var currentProductBlock = element.closest('.products-block');\n      changeProduct(currentProductBlock, selectColor);\n    });\n  });\n};\n\nvar makeFirstPhotoChecked = function makeFirstPhotoChecked() {\n  changeProductListener(productColorsModal, productColorsElModal);\n  productItems.forEach(function (item) {\n    var productColorsEl = item.querySelector('.products-block__color');\n\n    if (productColorsEl) {\n      var productColors = productColorsEl.querySelectorAll('ul li');\n      productColors[0].querySelector('input').checked = true;\n      changeProductListener(productColors, productColorsEl);\n    }\n  });\n};\n\nvar selectProduct = function selectProduct() {\n  makeFirstPhotoChecked();\n};\n\n\n\n//# sourceURL=webpack:///./js/modules/product-selection.js?")},"./js/modules/video-controller.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"controlVideo\", function() { return controlVideo; });\nvar videoContainer = document.querySelector('.advantages__video');\nvar button = videoContainer.querySelector('button');\nvar video = videoContainer.querySelector('video');\nvar controlVideo = function controlVideo() {\n  button.addEventListener('click', videoController);\n  video.addEventListener('play', function () {\n    button.style.display = 'none';\n  });\n};\n\nvar videoController = function videoController(event) {\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (video.paused || video.ended) {\n    video.play();\n  } else {\n    video.pause();\n  }\n\n  video.setAttribute('controls', true);\n};\n\n//# sourceURL=webpack:///./js/modules/video-controller.js?")},"./js/utils/autocomplete.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"location\", function() { return location; });\n/* harmony import */ var _locations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locations */ \"./js/utils/locations.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Autocomplete = /*#__PURE__*/function () {\n  function Autocomplete(input, dataObject) {\n    _classCallCheck(this, Autocomplete);\n\n    this._input = input;\n    this._dataObject = dataObject;\n    this._parent = this._input.parentNode;\n    this._optionsList = '';\n    this._options = '';\n    this._option = 0;\n    this._currentOptionIndex = -1;\n    this._maxDesirableResult = 3;\n  }\n  /**\n   * Создаёт выпадающий список найденных опций\n   */\n\n\n  _createClass(Autocomplete, [{\n    key: \"_createOptionsList\",\n    value: function _createOptionsList() {\n      this._optionsList = document.createElement('div');\n\n      this._optionsList.setAttribute('class', 'autocomplete');\n\n      this._optionsList.setAttribute('id', \"\".concat(this._input.id, \"-autocomplete\"));\n\n      this._parent.appendChild(this._optionsList);\n\n      this._input.dataset.inputAutocomplete = 'on';\n    }\n    /**\n     * Добавляет опцию в список опций в зависимости от введённого в поле `<input>` значения. Добавляет обработчик события по нажатию на опцию, где найденное значение возвращается в поле `<input>` вместе с совпавшим по ключю данного значения, значением из передаваемого объекта `dataObject`.\n     * @param {string} value текстовое значение, введённое в поле `<input>`\n     */\n\n  }, {\n    key: \"_createOption\",\n    value: function _createOption(value) {\n      var _this = this;\n\n      var option = document.createElement('div');\n      option.setAttribute('class', 'autocomplete__option');\n      option.innerText = value;\n      option.setAttribute('data-option', this._option++);\n\n      this._optionsList.appendChild(option);\n\n      this._options = this._optionsList.querySelectorAll('[data-option]');\n      option.addEventListener('click', function () {\n        _this._input.value = \"\".concat(option.innerText, \", \").concat(_this._dataObject[option.innerText]);\n\n        _this._removeOptionstList();\n      });\n    }\n    /**\n     * Закрывает все найденные в документе списки опций\n     */\n\n  }, {\n    key: \"_closeAllLists\",\n    value: function _closeAllLists() {\n      var autocompleteLists = document.querySelectorAll('.autocomplete');\n      autocompleteLists.forEach(function (list) {\n        list.parentNode.querySelector('[data-input-autocomplete]').dataset.inputAutocomplete = 'off';\n        list.parentNode.removeChild(list);\n      });\n    }\n    /**\n     * Удаляет текущий список опций\n     */\n\n  }, {\n    key: \"_removeOptionstList\",\n    value: function _removeOptionstList() {\n      if (this._optionsList && this._optionsList.parentNode) {\n        this._optionsList.parentNode.removeChild(this._optionsList);\n\n        this._optionsList = '';\n        this._input.dataset.inputAutocomplete = 'off';\n        this._option = 0;\n      }\n    }\n    /**\n     * Ищет совпадение ключей передаваемого конструктору объекта `dataObject` с введённым в текущее поле `<input>`, значением и возвращает найденное по ключу, значение.\n     * @return {string} строковое значение ключа\n     */\n\n  }, {\n    key: \"_findString\",\n    value: function _findString() {\n      var _this2 = this;\n\n      return Object.keys(this._dataObject).filter(function (el) {\n        return el.toUpperCase().startsWith(_this2._input.value.toUpperCase());\n      });\n    }\n    /**\n     * В зависимости от значения текущих найденных опций и индекса, отслежавающего перемещение с помощью клавиш `Up` и `Down`, добавляет класс для стилизации активной опции.\n     */\n\n  }, {\n    key: \"_addActive\",\n    value: function _addActive() {\n      if (!this._options) {\n        return;\n      }\n\n      this._removeActive();\n\n      switch (true) {\n        case this._currentOptionIndex >= this._options.length:\n          this._currentOptionIndex = 0;\n          break;\n\n        case this._currentOptionIndex < 0:\n          this._currentOptionIndex = this._options.length - 1;\n          break;\n      }\n\n      this._options[this._currentOptionIndex].classList.add('autocomplete__option--active');\n    }\n    /**\n     * Удаляет класс стилизации активной опции.\n     */\n\n  }, {\n    key: \"_removeActive\",\n    value: function _removeActive() {\n      if (this._options) {\n        this._options.forEach(function (option) {\n          if (option.classList.contains('autocomplete__option--active')) {\n            option.classList.remove('autocomplete__option--active');\n          }\n        });\n      }\n    }\n    /**\n     * Обработчик события при вводе в поле `<input>`. Cоздаёт список опций и кадждую опцию в зависимости от введённого значения. Максимальное количество опций лимитировано значением `this._maxDesirableResult`\n     */\n\n  }, {\n    key: \"_onInput\",\n    value: function _onInput() {\n      var _this3 = this;\n\n      var foundValues = this._findString();\n\n      this._removeOptionstList();\n\n      if (this._input.value.length > 0 && foundValues.length > 0) {\n        this._createOptionsList();\n\n        foundValues.slice(0, this._maxDesirableResult).forEach(function (value) {\n          _this3._createOption(value);\n        });\n        this._currentOptionIndex = -1;\n      }\n    }\n    /**\n     * Обработчик события для случаев, если поле `<input>` теряет фокус, но в нём введено значение, которое совпадает с одним из ключей передаваемого объекта `dataObject`. В таком случае, в поле возвращатся сконкатенированное значение ключа и значения поля.\n     */\n\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      this._input.value = this._dataObject[this._input.value] ? \"\".concat(this._input.value, \", \").concat(this._dataObject[this._input.value]) : this._input.value;\n    }\n    /**\n     * Обработчик события навигации клавишами `Up` и `Down` по найденным опциям, а так же клавиши `Enter`, для добавления найденного значения (вместе с найденным по ключу объекта `dataObject`, соответствующего значения) в поле ввода.\n     * @param {'DOM Event'} evt перехватываемый объект события, для обработки кодов определённых клавиш\n     */\n\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(evt) {\n      switch (evt.keyCode) {\n        case 40:\n          this._currentOptionIndex++;\n\n          this._addActive();\n\n          break;\n\n        case 38:\n          evt.preventDefault();\n          this._currentOptionIndex--;\n\n          this._addActive();\n\n          break;\n\n        case 13:\n          evt.preventDefault();\n\n          if (this._currentOptionIndex > -1) {\n            if (this._options) {\n              this._options[this._currentOptionIndex].click();\n            }\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this4 = this;\n\n      this._input.addEventListener('input', function () {\n        _this4._onInput();\n      });\n\n      this._input.addEventListener('change', function () {\n        _this4._onChange();\n      });\n\n      this._input.addEventListener('keydown', function (evt) {\n        _this4._onKeydown(evt);\n      });\n\n      document.addEventListener('click', function () {\n        return _this4._closeAllLists();\n      });\n    }\n  }]);\n\n  return Autocomplete;\n}();\n\nvar location = new Autocomplete(document.querySelector('#modal__order-location'), _locations__WEBPACK_IMPORTED_MODULE_0__[\"locations\"]);\n\n\n//# sourceURL=webpack:///./js/utils/autocomplete.js?")},"./js/utils/form-validation.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormValidation\", function() { return FormValidation; });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Добавляет валидацию для выбранных `<input>` переданной формы\n * @param {Element} form форма, в которой обрабатываются `<input>`\n * @param {'NodeList or/and Element'} inputs все элементы, которые обрабатываются в переданной `<form>`\n */\nvar FormValidation = /*#__PURE__*/function () {\n  function FormValidation(form) {\n    _classCallCheck(this, FormValidation);\n\n    this._form = form;\n\n    for (var _len = arguments.length, inputs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      inputs[_key - 1] = arguments[_key];\n    }\n\n    this._receivedInputs = inputs;\n    this._inputs = this._convertToArrayInputs();\n    this._checkboxes = this._getCheckboxes();\n  }\n\n  _createClass(FormValidation, [{\n    key: \"_convertToArrayInputs\",\n    value: function _convertToArrayInputs() {\n      var inputs = [];\n\n      this._receivedInputs.forEach(function (input) {\n        if (input.constructor === NodeList) {\n          inputs.push.apply(inputs, _toConsumableArray(input));\n        } else {\n          inputs.push(input);\n        }\n      });\n\n      return inputs;\n    }\n  }, {\n    key: \"_getCheckboxes\",\n    value: function _getCheckboxes() {\n      var checkboxes = [];\n\n      this._inputs.forEach(function (input) {\n        if (input.type === 'checkbox') {\n          checkboxes.push(input);\n        }\n      });\n\n      return checkboxes;\n    }\n    /**\n     * Создаёт элемент ошибки, добавляет его DOM. Добавляет атрибут для стилизации ошибки для `<input>`\n     * @param {'Element'} input элемент `<input>`\n     * @param {string} message текст ошибки, передаваемый элементу\n     */\n\n  }, {\n    key: \"_createError\",\n    value: function _createError(input, message) {\n      var inputParent = input.parentNode;\n      input.setAttribute('data-error', '');\n\n      if (!input.parentNode.querySelector('span[data-error-message]')) {\n        var errorElement = document.createElement('span');\n        errorElement.setAttribute('data-error-message', '');\n        errorElement.textContent = message;\n        inputParent.append(errorElement);\n      }\n    }\n    /**\n     * Удаляет элемент ошибки из DOM. Удаляет атрибут для стилизации ошибки для `<input>`\n     */\n\n  }, {\n    key: \"_removeError\",\n    value: function _removeError() {\n      var errorElement = this.parentNode.querySelector('span[data-error-message]');\n      this.removeAttribute('data-error');\n\n      if (errorElement) {\n        errorElement.remove();\n      }\n    }\n    /**\n     * Добавляет ошибку с необходимым сообщением, в засисимости от значения атрибута `name` в `<input>`\n     * @param {'Element'} input элемент `<input>`\n     */\n\n  }, {\n    key: \"_throwCustomValueMissingError\",\n    value: function _throwCustomValueMissingError(input) {\n      switch (input.name) {\n        case 'name':\n          this._createError(input, 'Укажите, пожалуйста, ваше имя');\n\n          break;\n\n        case 'surname':\n          this._createError(input, 'Укажите, пожалуйста, вашу фамилию');\n\n          break;\n\n        case 'phone':\n          this._createError(input, 'Укажите, пожалуйста, ваш телефон');\n\n          break;\n\n        case 'location':\n          this._createError(input, 'Укажите, пожалуйста, ваш город');\n\n          break;\n\n        case 'street':\n          this._createError(input, 'Укажите, пожалуйста, вашу улицу');\n\n          break;\n\n        case 'house':\n          this._createError(input, 'Необходимое поле');\n\n          break;\n\n        case 'bulk':\n          this._createError(input, 'Необходимое поле');\n\n          break;\n\n        case 'flat':\n          this._createError(input, 'Необходимое поле');\n\n          break;\n\n        case 'nonstandard-address':\n          this._createError(input, 'Укажите, пожалуйста, адрес');\n\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Добавляет ошибку с необходимым сообщением, в засисимости от значения атрибута `type` в `<input>`\n     * @param {'Element'} input элемент `<input>`\n     */\n\n  }, {\n    key: \"_throwCustomPatternMismatchError\",\n    value: function _throwCustomPatternMismatchError(input) {\n      switch (input.type) {\n        case 'text':\n          this._createError(input, 'Введите текст в соответствии с форматом');\n\n          break;\n\n        case 'tel':\n          this._createError(input, 'Введите номер в соответствии с форматом');\n\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Проверяет тип ошибки в `<input>` и создаёт ошибку в зависимости от типа\n     * @param {'Element'} input элемент `<input>`\n     */\n\n  }, {\n    key: \"_showError\",\n    value: function _showError(input) {\n      if (input.validity.valueMissing) {\n        this._throwCustomValueMissingError(input);\n      }\n\n      if (input.validity.patternMismatch) {\n        this._throwCustomPatternMismatchError(input);\n      }\n    }\n    /**\n     * Проходит по всем `<input>` формы, добавленным в конструктор. При этом, делает проверку на валидность каждого поля, объекта состояния `validity`.\n     * Если хотя бы одно поле объекта `validity` любого `<input>` возвращает `false`, событие `submit` формы блокируется и отображаются ошибки для каждого `<input>`, в зависимости от найденных несоответствий валидности.\n     * @param {'Dom Event'} evt событие `submit` формы\n     * @return {boolean} булево значение валидности всей формы\n     */\n\n  }, {\n    key: \"_onSubmit\",\n    value: function _onSubmit(evt) {\n      var _this = this;\n\n      var valid = true;\n\n      this._inputs.forEach(function (input) {\n        if (!input.checkValidity()) {\n          evt.preventDefault();\n          valid = false;\n\n          _this._showError(input);\n\n          input.addEventListener('click', _this._removeError);\n        } else {\n          input.removeEventListener('click', _this._removeError);\n        }\n      });\n\n      return valid;\n    }\n  }, {\n    key: \"onCheckbox\",\n    value: function onCheckbox(checkbox, callbackTrue, callbackFalse) {\n      var _this2 = this;\n\n      this._checkboxes.forEach(function (currentCheckbox) {\n        if (checkbox === currentCheckbox) {\n          currentCheckbox.addEventListener('change', function () {\n            _this2.removeAllErrors();\n\n            if (currentCheckbox.checked) {\n              callbackTrue();\n              return;\n            }\n\n            callbackFalse();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"clearAllValues\",\n    value: function clearAllValues() {\n      this._inputs.forEach(function (input) {\n        if (input.type === 'text' || input.type === 'tel' || input.type === 'textarea') {\n          input.value = '';\n        }\n      });\n    }\n  }, {\n    key: \"removeAllErrors\",\n    value: function removeAllErrors() {\n      var _this3 = this;\n\n      this._inputs.forEach(function (input) {\n        _this3._removeError.call(input, 0);\n\n        input.removeEventListener('click', _this3._removeError);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init(callback) {\n      var _this4 = this;\n\n      var counter = 0;\n\n      this._form.addEventListener('submit', function (evt) {\n        if (_this4._onSubmit(evt) && counter <= 0) {\n          evt.preventDefault();\n          callback(_this4._form.closest('.modal'), _this4);\n          counter++;\n        }\n      });\n    }\n  }]);\n\n  return FormValidation;\n}();\n\n\n\n//# sourceURL=webpack:///./js/utils/form-validation.js?")},"./js/utils/ie-fix.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ieFix", function() { return ieFix; });\n/* eslint-disable */\nvar ieFix = function ieFix() {\n  // Polyfills\n  //---------------------------------\n  // forEach\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n      thisArg = thisArg || window;\n\n      for (var i = 0; i < this.length; i++) {\n        callback.call(thisArg, this[i], i, this);\n      }\n    };\n  } // includes\n\n\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, \'includes\', {\n      value: function value(searchElement, fromIndex) {\n        if (this == null) {\n          throw new TypeError(\'"this" is null or not defined\');\n        }\n\n        var o = Object(this);\n        var len = o.length >>> 0;\n\n        if (len === 0) {\n          return false;\n        }\n\n        var n = fromIndex | 0;\n        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        function sameValueZero(x, y) {\n          return x === y || typeof x === \'number\' && typeof y === \'number\' && isNaN(x) && isNaN(y);\n        }\n\n        while (k < len) {\n          if (sameValueZero(o[k], searchElement)) {\n            return true;\n          }\n\n          k++;\n        }\n\n        return false;\n      }\n    });\n  } // matches\n\n\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s);\n      var i = matches.length; // eslint-disable-next-line no-empty\n\n      while (--i >= 0 && matches.item(i) !== this) {}\n\n      return i > -1;\n    };\n  } // closest\n\n\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n\n      do {\n        if (el.matches(s)) {\n          return el;\n        }\n\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  } // prepend\n\n\n  (function (arr) {\n    arr.forEach(function (item) {\n      if (item.hasOwnProperty("prepend")) {\n        return;\n      }\n\n      Object.defineProperty(item, "prepend", {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: function prepend() {\n          // eslint-disable-next-line prefer-rest-params\n          var argArr = Array.prototype.slice.call(arguments);\n          var docFrag = document.createDocumentFragment();\n          argArr.forEach(function (argItem) {\n            var isNode = argItem instanceof Node;\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n          });\n          this.insertBefore(docFrag, this.firstChild);\n        }\n      });\n    });\n  })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // append\n\n\n  (function (arr) {\n    arr.forEach(function (item) {\n      if (item.hasOwnProperty("append")) {\n        return;\n      }\n\n      Object.defineProperty(item, "append", {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: function append() {\n          // eslint-disable-next-line prefer-rest-params\n          var argArr = Array.prototype.slice.call(arguments);\n          var docFrag = document.createDocumentFragment();\n          argArr.forEach(function (argItem) {\n            var isNode = argItem instanceof Node;\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n          });\n          this.appendChild(docFrag);\n        }\n      });\n    });\n  })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // before\n\n\n  (function (arr) {\n    arr.forEach(function (item) {\n      if (item.hasOwnProperty("before")) {\n        return;\n      }\n\n      Object.defineProperty(item, "before", {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: function before() {\n          // eslint-disable-next-line prefer-rest-params\n          var argArr = Array.prototype.slice.call(arguments);\n          var docFrag = document.createDocumentFragment();\n          argArr.forEach(function (argItem) {\n            var isNode = argItem instanceof Node;\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n          });\n          this.parentNode.insertBefore(docFrag, this);\n        }\n      });\n    });\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // remove\n\n\n  (function (arr) {\n    arr.forEach(function (item) {\n      if (item.hasOwnProperty("remove")) {\n        return;\n      }\n\n      Object.defineProperty(item, "remove", {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: function remove() {\n          if (this.parentNode !== null) {\n            this.parentNode.removeChild(this);\n          }\n        }\n      });\n    });\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // startsWith\n\n\n  if (!String.prototype.startsWith) {\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(String.prototype, "startsWith", {\n      value: function value(search, rawPos) {\n        var pos = rawPos > 0 ? rawPos | 0 : 0;\n        return this.substring(pos, pos + search.length) === search;\n      }\n    });\n  } // Fixes\n  //---------------------------------\n  // ie download\n\n\n  var ie11Download = function ie11Download(el) {\n    if (el.href === "") {\n      throw Error("The element has no href value.");\n    }\n\n    var filename = el.getAttribute("download");\n\n    if (filename === null || filename === "") {\n      var tmp = el.href.split("/");\n      filename = tmp[tmp.length - 1];\n    }\n\n    el.addEventListener("click", function (evt) {\n      evt.preventDefault();\n      var xhr = new XMLHttpRequest();\n\n      xhr.onloadstart = function () {\n        xhr.responseType = "blob";\n      };\n\n      xhr.onload = function () {\n        navigator.msSaveOrOpenBlob(xhr.response, filename);\n      };\n\n      xhr.open("GET", el.href, true);\n      xhr.send();\n    });\n  };\n\n  if (window.navigator.msSaveBlob) {\n    var downloadLinks = document.querySelectorAll("a[download]");\n\n    if (downloadLinks.length) {\n      downloadLinks.forEach(function (el) {\n        ie11Download(el);\n      });\n    }\n  } // ie svg focus fix\n\n\n  var unfocusableSvg = function unfocusableSvg() {\n    if (!(!!window.MSInputMethodContext && !!document.documentMode)) {\n      return;\n    }\n\n    var svg = document.querySelectorAll(\'svg\');\n    svg.forEach(function (el) {\n      el.setAttribute(\'focusable\', \'false\');\n    });\n  };\n\n  unfocusableSvg(); //ie footer nailing\n\n  var ieFooterNailing = function ieFooterNailing() {\n    var main = document.querySelector(\'main\');\n    var header = document.querySelector(\'.header\');\n    var footer = document.querySelector(\'.footer\');\n    var headerH;\n    var footerH;\n    var mainHMin;\n\n    if (!main || !(!!window.MSInputMethodContext && !!document.documentMode)) {\n      return;\n    }\n\n    var mainHeight = function mainHeight() {\n      // eslint-disable-next-line no-unused-expressions\n      header ? headerH = header.getBoundingClientRect().height : headerH = 0; // eslint-disable-next-line no-unused-expressions\n\n      footer ? footerH = footer.getBoundingClientRect().height : footerH = 0;\n      mainHMin = window.innerHeight;\n      main.style.minHeight = mainHMin - (headerH + footerH) + \'px\';\n    };\n\n    document.addEventListener(\'loadDOMContentLoaded\', mainHeight());\n    window.addEventListener(\'resize\', mainHeight);\n  };\n\n  ieFooterNailing();\n};\n\n\n\n//# sourceURL=webpack:///./js/utils/ie-fix.js?')},"./js/utils/locations.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"locations\", function() { return locations; });\nvar locations = {\n  'Абаза': 'Хакасия',\n  'Абакан': 'Хакасия',\n  'Абдулино': 'Оренбургская область',\n  'Абинск': 'Краснодарский край',\n  'Агидель': 'Башкортостан',\n  'Агрыз': 'Татарстан',\n  'Адыгейск': 'Адыгея',\n  'Азнакаево': 'Татарстан',\n  'Азов': 'Ростовская область',\n  'Ак-Довурак': 'Тыва',\n  'Аксай': 'Ростовская область',\n  'Алагир': 'Северная Осетия — Алания',\n  'Алапаевск': 'Свердловская область',\n  'Алатырь': 'Чувашия',\n  'Алдан': 'Якутия',\n  'Алейск': 'Алтайский край',\n  'Александров': 'Владимирская область',\n  'Александровск': 'Пермский край',\n  'Александровск-Сахалинский': 'Сахалинская область',\n  'Алексеевка': 'Белгородская область',\n  'Алексин': 'Тульская область',\n  'Алзамай': 'Иркутская область',\n  'Алупка': 'Крым',\n  'Алушта': 'Крым',\n  'Альметьевск': 'Татарстан',\n  'Амурск': 'Хабаровский край',\n  'Анадырь': 'Чукотский АО',\n  'Анапа': 'Краснодарский край',\n  'Ангарск': 'Иркутская область',\n  'Андреаполь': 'Тверская область',\n  'Анжеро-Судженск': 'Кемеровская область',\n  'Анива': 'Сахалинская область',\n  'Апатиты': 'Мурманская область',\n  'Апрелевка': 'Московская область',\n  'Апшеронск': 'Краснодарский край',\n  'Арамиль': 'Свердловская область',\n  'Аргун': 'Чечня',\n  'Ардатов': 'Мордовия',\n  'Ардон': 'Северная Осетия — Алания',\n  'Арзамас': 'Нижегородская область',\n  'Аркадак': 'Саратовская область',\n  'Армавир': 'Краснодарский край',\n  'Армянск': 'Крым',\n  'Арсеньев': 'Приморский край',\n  'Арск': 'Татарстан',\n  'Артём': 'Приморский край',\n  'Артёмовск': 'Красноярский край',\n  'Артёмовский': 'Свердловская область',\n  'Архангельск': 'Архангельская область',\n  'Асбест': 'Свердловская область',\n  'Асино': 'Томская область',\n  'Астрахань': 'Астраханская область',\n  'Аткарск': 'Саратовская область',\n  'Ахтубинск': 'Астраханская область',\n  'Ачинск': 'Красноярский край',\n  'Аша': 'Челябинская область',\n  'Бабаево': 'Вологодская область',\n  'Бабушкин': 'Бурятия',\n  'Бавлы': 'Татарстан',\n  'Багратионовск': 'Калининградская область',\n  'Байкальск': 'Иркутская область',\n  'Баймак': 'Башкортостан',\n  'Бакал': 'Челябинская область',\n  'Баксан': 'Кабардино-Балкария',\n  'Балабаново': 'Калужская область',\n  'Балаково': 'Саратовская область',\n  'Балахна': 'Нижегородская область',\n  'Балашиха': 'Московская область',\n  'Балашов': 'Саратовская область',\n  'Балей': 'Забайкальский край',\n  'Балтийск': 'Калининградская область',\n  'Барабинск': 'Новосибирская область',\n  'Барнаул': 'Алтайский край',\n  'Барыш': 'Ульяновская область',\n  'Батайск': 'Ростовская область',\n  'Бахчисарай': 'Крым',\n  'Бежецк': 'Тверская область',\n  'Белая Калитва': 'Ростовская область',\n  'Белая Холуница': 'Кировская область',\n  'Белгород': 'Белгородская область',\n  'Белебей': 'Башкортостан',\n  'Белёв': 'Тульская область',\n  'Белинский': 'Пензенская область',\n  'Белово': 'Кемеровская область',\n  'Белогорск': 'Крым',\n  'Белозерск': 'Вологодская область',\n  'Белокуриха': 'Алтайский край',\n  'Беломорск': 'Карелия',\n  'Белоозёрский': 'Московская область',\n  'Белорецк': 'Башкортостан',\n  'Белореченск': 'Краснодарский край',\n  'Белоусово': 'Калужская область',\n  'Белоярский': 'Ханты-Мансийский АО — Югра',\n  'Белый': 'Тверская область',\n  'Бердск': 'Новосибирская область',\n  'Березники': 'Пермский край',\n  'Берёзовский': 'Свердловская область',\n  'Беслан': 'Северная Осетия — Алания',\n  'Бийск': 'Алтайский край',\n  'Бикин': 'Хабаровский край',\n  'Билибино': 'Чукотский АО',\n  'Биробиджан': 'Еврейская АО',\n  'Бирск': 'Башкортостан',\n  'Бирюсинск': 'Иркутская область',\n  'Бирюч': 'Белгородская область',\n  'Благовещенск': 'Амурская область',\n  'Благодарный': 'Ставропольский край',\n  'Бобров': 'Воронежская область',\n  'Богданович': 'Свердловская область',\n  'Богородицк': 'Тульская область',\n  'Богородск': 'Нижегородская область',\n  'Боготол': 'Красноярский край',\n  'Богучар': 'Воронежская область',\n  'Бодайбо': 'Иркутская область',\n  'Бокситогорск': 'Ленинградская область',\n  'Болгар': 'Татарстан',\n  'Бологое': 'Тверская область',\n  'Болотное': 'Новосибирская область',\n  'Болохово': 'Тульская область',\n  'Болхов': 'Орловская область',\n  'Большой Камень': 'Приморский край',\n  'Бор': 'Нижегородская область',\n  'Борзя': 'Забайкальский край',\n  'Борисоглебск': 'Воронежская область',\n  'Боровичи': 'Новгородская область',\n  'Боровск': 'Калужская область',\n  'Бородино': 'Красноярский край',\n  'Братск': 'Иркутская область',\n  'Бронницы': 'Московская область',\n  'Брянск': 'Брянская область',\n  'Бугульма': 'Татарстан',\n  'Бугуруслан': 'Оренбургская область',\n  'Будённовск': 'Ставропольский край',\n  'Бузулук': 'Оренбургская область',\n  'Буинск': 'Татарстан',\n  'Буй': 'Костромская область',\n  'Буйнакск': 'Дагестан',\n  'Бутурлиновка': 'Воронежская область',\n  'Валдай': 'Новгородская область',\n  'Валуйки': 'Белгородская область',\n  'Велиж': 'Смоленская область',\n  'Великие Луки': 'Псковская область',\n  'Великий Новгород': 'Новгородская область',\n  'Великий Устюг': 'Вологодская область',\n  'Вельск': 'Архангельская область',\n  'Венёв': 'Тульская область',\n  'Верещагино': 'Пермский край',\n  'Верея': 'Московская область',\n  'Верхнеуральск': 'Челябинская область',\n  'Верхний Тагил': 'Свердловская область',\n  'Верхний Уфалей': 'Челябинская область',\n  'Верхняя Пышма': 'Свердловская область',\n  'Верхняя Салда': 'Свердловская область',\n  'Верхняя Тура': 'Свердловская область',\n  'Верхотурье': 'Свердловская область',\n  'Верхоянск': 'Якутия',\n  'Весьегонск': 'Тверская область',\n  'Ветлуга': 'Нижегородская область',\n  'Видное': 'Московская область',\n  'Вилюйск': 'Якутия',\n  'Вилючинск': 'Камчатский край',\n  'Вихоревка': 'Иркутская область',\n  'Вичуга': 'Ивановская область',\n  'Владивосток': 'Приморский край',\n  'Владикавказ': 'Северная Осетия — Алания',\n  'Владимир': 'Владимирская область',\n  'Волгоград': 'Волгоградская область',\n  'Волгодонск': 'Ростовская область',\n  'Волгореченск': 'Костромская область',\n  'Волжск': 'Марий Эл',\n  'Волжский': 'Волгоградская область',\n  'Вологда': 'Вологодская область',\n  'Володарск': 'Нижегородская область',\n  'Волоколамск': 'Московская область',\n  'Волосово': 'Ленинградская область',\n  'Волхов': 'Ленинградская область',\n  'Волчанск': 'Свердловская область',\n  'Вольск': 'Саратовская область',\n  'Воркута': 'Коми',\n  'Воронеж': 'Воронежская область',\n  'Ворсма': 'Нижегородская область',\n  'Воскресенск': 'Московская область',\n  'Воткинск': 'Удмуртия',\n  'Всеволожск': 'Ленинградская область',\n  'Вуктыл': 'Коми',\n  'Выборг': 'Ленинградская область',\n  'Выкса': 'Нижегородская область',\n  'Высоковск': 'Московская область',\n  'Высоцк': 'Ленинградская область',\n  'Вытегра': 'Вологодская область',\n  'Вышний Волочёк': 'Тверская область',\n  'Вяземский': 'Хабаровский край',\n  'Вязники': 'Владимирская область',\n  'Вязьма': 'Смоленская область',\n  'Вятские Поляны': 'Кировская область',\n  'Гаврилов Посад': 'Ивановская область',\n  'Гаврилов-Ям': 'Ярославская область',\n  'Гагарин': 'Смоленская область',\n  'Гаджиево': 'Мурманская область',\n  'Гай': 'Оренбургская область',\n  'Галич': 'Костромская область',\n  'Гатчина': 'Ленинградская область',\n  'Гвардейск': 'Калининградская область',\n  'Гдов': 'Псковская область',\n  'Геленджик': 'Краснодарский край',\n  'Георгиевск': 'Ставропольский край',\n  'Глазов': 'Удмуртия',\n  'Голицыно': 'Московская область',\n  'Горбатов': 'Нижегородская область',\n  'Горно-Алтайск': 'Алтай',\n  'Горнозаводск': 'Пермский край',\n  'Горняк': 'Алтайский край',\n  'Городец': 'Нижегородская область',\n  'Городище': 'Пензенская область',\n  'Городовиковск': 'Калмыкия',\n  'Гороховец': 'Владимирская область',\n  'Горячий Ключ': 'Краснодарский край',\n  'Грайворон': 'Белгородская область',\n  'Гремячинск': 'Пермский край',\n  'Грозный': 'Чечня',\n  'Грязи': 'Липецкая область',\n  'Грязовец': 'Вологодская область',\n  'Губаха': 'Пермский край',\n  'Губкин': 'Белгородская область',\n  'Губкинский': 'Ямало-Ненецкий АО',\n  'Гудермес': 'Чечня',\n  'Гуково': 'Ростовская область',\n  'Гулькевичи': 'Краснодарский край',\n  'Гурьевск': 'Кемеровская область',\n  'Гусев': 'Калининградская область',\n  'Гусиноозёрск': 'Бурятия',\n  'Гусь-Хрустальный': 'Владимирская область',\n  'Давлеканово': 'Башкортостан',\n  'Дагестанские Огни': 'Дагестан',\n  'Далматово': 'Курганская область',\n  'Дальнегорск': 'Приморский край',\n  'Дальнереченск': 'Приморский край',\n  'Данилов': 'Ярославская область',\n  'Данков': 'Липецкая область',\n  'Дегтярск': 'Свердловская область',\n  'Дедовск': 'Московская область',\n  'Демидов': 'Смоленская область',\n  'Дербент': 'Дагестан',\n  'Десногорск': 'Смоленская область',\n  'Джанкой': 'Крым',\n  'Дзержинск': 'Нижегородская область',\n  'Дзержинский': 'Московская область',\n  'Дивногорск': 'Красноярский край',\n  'Дигора': 'Северная Осетия — Алания',\n  'Димитровград': 'Ульяновская область',\n  'Дмитриев': 'Курская область',\n  'Дмитров': 'Московская область',\n  'Дмитровск': 'Орловская область',\n  'Дно': 'Псковская область',\n  'Добрянка': 'Пермский край',\n  'Долгопрудный': 'Московская область',\n  'Долинск': 'Сахалинская область',\n  'Домодедово': 'Московская область',\n  'Донецк': 'Ростовская область',\n  'Донской': 'Тульская область',\n  'Дорогобуж': 'Смоленская область',\n  'Дрезна': 'Московская область',\n  'Дубна': 'Московская область',\n  'Дубовка': 'Волгоградская область',\n  'Дудинка': 'Красноярский край',\n  'Духовщина': 'Смоленская область',\n  'Дюртюли': 'Башкортостан',\n  'Дятьково': 'Брянская область',\n  'Евпатория': 'Крым',\n  'Егорьевск': 'Московская область',\n  'Ейск': 'Краснодарский край',\n  'Екатеринбург': 'Свердловская область',\n  'Елабуга': 'Татарстан',\n  'Елец': 'Липецкая область',\n  'Елизово': 'Камчатский край',\n  'Ельня': 'Смоленская область',\n  'Еманжелинск': 'Челябинская область',\n  'Емва': 'Коми',\n  'Енисейск': 'Красноярский край',\n  'Ермолино': 'Калужская область',\n  'Ершов': 'Саратовская область',\n  'Ессентуки': 'Ставропольский край',\n  'Ефремов': 'Тульская область',\n  'Железноводск': 'Ставропольский край',\n  'Железногорск': 'Курская область',\n  'Железногорск-Илимский': 'Иркутская область',\n  'Жердевка': 'Тамбовская область',\n  'Жигулёвск': 'Самарская область',\n  'Жиздра': 'Калужская область',\n  'Жирновск': 'Волгоградская область',\n  'Жуков': 'Калужская область',\n  'Жуковка': 'Брянская область',\n  'Жуковский': 'Московская область',\n  'Завитинск': 'Амурская область',\n  'Заводоуковск': 'Тюменская область',\n  'Заволжск': 'Ивановская область',\n  'Заволжье': 'Нижегородская область',\n  'Задонск': 'Липецкая область',\n  'Заинск': 'Татарстан',\n  'Закаменск': 'Бурятия',\n  'Заозёрный': 'Красноярский край',\n  'Заозёрск': 'Мурманская область',\n  'Западная Двина': 'Тверская область',\n  'Заполярный': 'Мурманская область',\n  'Зарайск': 'Московская область',\n  'Заречный': 'Свердловская область',\n  'Заринск': 'Алтайский край',\n  'Звенигово': 'Марий Эл',\n  'Звенигород': 'Московская область',\n  'Зверево': 'Ростовская область',\n  'Зеленогорск': 'Красноярский край',\n  'Зеленоградск': 'Калининградская область',\n  'Зеленодольск': 'Татарстан',\n  'Зеленокумск': 'Ставропольский край',\n  'Зерноград': 'Ростовская область',\n  'Зея': 'Амурская область',\n  'Зима': 'Иркутская область',\n  'Златоуст': 'Челябинская область',\n  'Злынка': 'Брянская область',\n  'Змеиногорск': 'Алтайский край',\n  'Знаменск': 'Астраханская область',\n  'Зубцов': 'Тверская область',\n  'Зуевка': 'Кировская область',\n  'Ивангород': 'Ленинградская область',\n  'Иваново': 'Ивановская область',\n  'Ивантеевка': 'Московская область',\n  'Ивдель': 'Свердловская область',\n  'Игарка': 'Красноярский край',\n  'Ижевск': 'Удмуртия',\n  'Избербаш': 'Дагестан',\n  'Изобильный': 'Ставропольский край',\n  'Иланский': 'Красноярский край',\n  'Инза': 'Ульяновская область',\n  'Иннополис': 'Татарстан',\n  'Инсар': 'Мордовия',\n  'Инта': 'Коми',\n  'Ипатово': 'Ставропольский край',\n  'Ирбит': 'Свердловская область',\n  'Иркутск': 'Иркутская область',\n  'Исилькуль': 'Омская область',\n  'Искитим': 'Новосибирская область',\n  'Истра': 'Московская область',\n  'Ишим': 'Тюменская область',\n  'Ишимбай': 'Башкортостан',\n  'Йошкар-Ола': 'Марий Эл',\n  'Кадников': 'Вологодская область',\n  'Казань': 'Татарстан',\n  'Калач': 'Воронежская область',\n  'Калач-на-Дону': 'Волгоградская область',\n  'Калачинск': 'Омская область',\n  'Калининград': 'Калининградская область',\n  'Калининск': 'Саратовская область',\n  'Калтан': 'Кемеровская область',\n  'Калуга': 'Калужская область',\n  'Калязин': 'Тверская область',\n  'Камбарка': 'Удмуртия',\n  'Каменка': 'Пензенская область',\n  'Каменногорск': 'Ленинградская область',\n  'Каменск-Уральский': 'Свердловская область',\n  'Каменск-Шахтинский': 'Ростовская область',\n  'Камень-на-Оби': 'Алтайский край',\n  'Камешково': 'Владимирская область',\n  'Камызяк': 'Астраханская область',\n  'Камышин': 'Волгоградская область',\n  'Камышлов': 'Свердловская область',\n  'Канаш': 'Чувашия',\n  'Кандалакша': 'Мурманская область',\n  'Канск': 'Красноярский край',\n  'Карабаново': 'Владимирская область',\n  'Карабаш': 'Челябинская область',\n  'Карабулак': 'Ингушетия',\n  'Карасук': 'Новосибирская область',\n  'Карачаевск': 'Карачаево-Черкесия',\n  'Карачев': 'Брянская область',\n  'Каргат': 'Новосибирская область',\n  'Каргополь': 'Архангельская область',\n  'Карпинск': 'Свердловская область',\n  'Карталы': 'Челябинская область',\n  'Касимов': 'Рязанская область',\n  'Касли': 'Челябинская область',\n  'Каспийск': 'Дагестан',\n  'Катав-Ивановск': 'Челябинская область',\n  'Катайск': 'Курганская область',\n  'Качканар': 'Свердловская область',\n  'Кашин': 'Тверская область',\n  'Кашира': 'Московская область',\n  'Кедровый': 'Томская область',\n  'Кемерово': 'Кемеровская область',\n  'Кемь': 'Карелия',\n  'Керчь': 'Крым',\n  'Кизел': 'Пермский край',\n  'Кизилюрт': 'Дагестан',\n  'Кизляр': 'Дагестан',\n  'Кимовск': 'Тульская область',\n  'Кимры': 'Тверская область',\n  'Кингисепп': 'Ленинградская область',\n  'Кинель': 'Самарская область',\n  'Кинешма': 'Ивановская область',\n  'Киреевск': 'Тульская область',\n  'Киренск': 'Иркутская область',\n  'Киржач': 'Владимирская область',\n  'Кириллов': 'Вологодская область',\n  'Кириши': 'Ленинградская область',\n  'Киров': 'Кировская область',\n  'Кировград': 'Свердловская область',\n  'Кирово-Чепецк': 'Кировская область',\n  'Кировск': 'Мурманская область',\n  'Кирс': 'Кировская область',\n  'Кирсанов': 'Тамбовская область',\n  'Киселёвск': 'Кемеровская область',\n  'Кисловодск': 'Ставропольский край',\n  'Клин': 'Московская область',\n  'Клинцы': 'Брянская область',\n  'Княгинино': 'Нижегородская область',\n  'Ковдор': 'Мурманская область',\n  'Ковров': 'Владимирская область',\n  'Ковылкино': 'Мордовия',\n  'Когалым': 'Ханты-Мансийский АО — Югра',\n  'Кодинск': 'Красноярский край',\n  'Козельск': 'Калужская область',\n  'Козловка': 'Чувашия',\n  'Козьмодемьянск': 'Марий Эл',\n  'Кола': 'Мурманская область',\n  'Кологрив': 'Костромская область',\n  'Коломна': 'Московская область',\n  'Колпашево': 'Томская область',\n  'Кольчугино': 'Владимирская область',\n  'Коммунар': 'Ленинградская область',\n  'Комсомольск': 'Ивановская область',\n  'Комсомольск-на-Амуре': 'Хабаровский край',\n  'Конаково': 'Тверская область',\n  'Кондопога': 'Карелия',\n  'Кондрово': 'Калужская область',\n  'Константиновск': 'Ростовская область',\n  'Копейск': 'Челябинская область',\n  'Кораблино': 'Рязанская область',\n  'Кореновск': 'Краснодарский край',\n  'Коркино': 'Челябинская область',\n  'Королёв': 'Московская область',\n  'Короча': 'Белгородская область',\n  'Корсаков': 'Сахалинская область',\n  'Коряжма': 'Архангельская область',\n  'Костерёво': 'Владимирская область',\n  'Костомукша': 'Карелия',\n  'Кострома': 'Костромская область',\n  'Котельники': 'Московская область',\n  'Котельниково': 'Волгоградская область',\n  'Котельнич': 'Кировская область',\n  'Котлас': 'Архангельская область',\n  'Котово': 'Волгоградская область',\n  'Котовск': 'Тамбовская область',\n  'Кохма': 'Ивановская область',\n  'Красавино': 'Вологодская область',\n  'Красноармейск': 'Саратовская область',\n  'Красновишерск': 'Пермский край',\n  'Красногорск': 'Московская область',\n  'Краснодар': 'Краснодарский край',\n  'Краснозаводск': 'Московская область',\n  'Краснознаменск': 'Московская область',\n  'Краснокаменск': 'Забайкальский край',\n  'Краснокамск': 'Пермский край',\n  'Красноперекопск': 'Крым',\n  'Краснослободск': 'Мордовия',\n  'Краснотурьинск': 'Свердловская область',\n  'Красноуральск': 'Свердловская область',\n  'Красноуфимск': 'Свердловская область',\n  'Красноярск': 'Красноярский край',\n  'Красный Кут': 'Саратовская область',\n  'Красный Сулин': 'Ростовская область',\n  'Красный Холм': 'Тверская область',\n  'Кремёнки': 'Калужская область',\n  'Кропоткин': 'Краснодарский край',\n  'Крымск': 'Краснодарский край',\n  'Кстово': 'Нижегородская область',\n  'Кубинка': 'Московская область',\n  'Кувандык': 'Оренбургская область',\n  'Кувшиново': 'Тверская область',\n  'Кудрово': 'Ленинградская область',\n  'Кудымкар': 'Пермский край',\n  'Кузнецк': 'Пензенская область',\n  'Куйбышев': 'Новосибирская область',\n  'Кукмор': 'Татарстан',\n  'Кулебаки': 'Нижегородская область',\n  'Кумертау': 'Башкортостан',\n  'Кунгур': 'Пермский край',\n  'Купино': 'Новосибирская область',\n  'Курган': 'Курганская область',\n  'Курганинск': 'Краснодарский край',\n  'Курильск': 'Сахалинская область',\n  'Курлово': 'Владимирская область',\n  'Куровское': 'Московская область',\n  'Курск': 'Курская область',\n  'Куртамыш': 'Курганская область',\n  'Курчалой': 'Чечня',\n  'Курчатов': 'Курская область',\n  'Куса': 'Челябинская область',\n  'Кушва': 'Свердловская область',\n  'Кызыл': 'Тыва',\n  'Кыштым': 'Челябинская область',\n  'Кяхта': 'Бурятия',\n  'Лабинск': 'Краснодарский край',\n  'Лабытнанги': 'Ямало-Ненецкий АО',\n  'Лагань': 'Калмыкия',\n  'Ладушкин': 'Калининградская область',\n  'Лаишево': 'Татарстан',\n  'Лакинск': 'Владимирская область',\n  'Лангепас': 'Ханты-Мансийский АО — Югра',\n  'Лахденпохья': 'Карелия',\n  'Лебедянь': 'Липецкая область',\n  'Лениногорск': 'Татарстан',\n  'Ленинск': 'Волгоградская область',\n  'Ленинск-Кузнецкий': 'Кемеровская область',\n  'Ленск': 'Якутия',\n  'Лермонтов': 'Ставропольский край',\n  'Лесной': 'Свердловская область',\n  'Лесозаводск': 'Приморский край',\n  'Лесосибирск': 'Красноярский край',\n  'Ливны': 'Орловская область',\n  'Ликино-Дулёво': 'Московская область',\n  'Липецк': 'Липецкая область',\n  'Липки': 'Тульская область',\n  'Лиски': 'Воронежская область',\n  'Лихославль': 'Тверская область',\n  'Лобня': 'Московская область',\n  'Лодейное Поле': 'Ленинградская область',\n  'Лосино-Петровский': 'Московская область',\n  'Луга': 'Ленинградская область',\n  'Луза': 'Кировская область',\n  'Лукоянов': 'Нижегородская область',\n  'Луховицы': 'Московская область',\n  'Лысково': 'Нижегородская область',\n  'Лысьва': 'Пермский край',\n  'Лыткарино': 'Московская область',\n  'Льгов': 'Курская область',\n  'Любань': 'Ленинградская область',\n  'Люберцы': 'Московская область',\n  'Любим': 'Ярославская область',\n  'Людиново': 'Калужская область',\n  'Лянтор': 'Ханты-Мансийский АО — Югра',\n  'Магадан': 'Магаданская область',\n  'Магас': 'Ингушетия',\n  'Магнитогорск': 'Челябинская область',\n  'Майкоп': 'Адыгея',\n  'Майский': 'Кабардино-Балкария',\n  'Макаров': 'Сахалинская область',\n  'Макарьев': 'Костромская область',\n  'Макушино': 'Курганская область',\n  'Малая Вишера': 'Новгородская область',\n  'Малгобек': 'Ингушетия',\n  'Малмыж': 'Кировская область',\n  'Малоархангельск': 'Орловская область',\n  'Малоярославец': 'Калужская область',\n  'Мамадыш': 'Татарстан',\n  'Мамоново': 'Калининградская область',\n  'Мантурово': 'Костромская область',\n  'Мариинск': 'Кемеровская область',\n  'Мариинский Посад': 'Чувашия',\n  'Маркс': 'Саратовская область',\n  'Махачкала': 'Дагестан',\n  'Мглин': 'Брянская область',\n  'Мегион': 'Ханты-Мансийский АО — Югра',\n  'Медвежьегорск': 'Карелия',\n  'Медногорск': 'Оренбургская область',\n  'Медынь': 'Калужская область',\n  'Межгорье': 'Башкортостан',\n  'Междуреченск': 'Кемеровская область',\n  'Мезень': 'Архангельская область',\n  'Меленки': 'Владимирская область',\n  'Мелеуз': 'Башкортостан',\n  'Менделеевск': 'Татарстан',\n  'Мензелинск': 'Татарстан',\n  'Мещовск': 'Калужская область',\n  'Миасс': 'Челябинская область',\n  'Микунь': 'Коми',\n  'Миллерово': 'Ростовская область',\n  'Минеральные Воды': 'Ставропольский край',\n  'Минусинск': 'Красноярский край',\n  'Миньяр': 'Челябинская область',\n  'Мирный': 'Архангельская область',\n  'Михайлов': 'Рязанская область',\n  'Михайловка': 'Волгоградская область',\n  'Михайловск': 'Ставропольский край',\n  'Мичуринск': 'Тамбовская область',\n  'Могоча': 'Забайкальский край',\n  'Можайск': 'Московская область',\n  'Можга': 'Удмуртия',\n  'Моздок': 'Северная Осетия — Алания',\n  'Мончегорск': 'Мурманская область',\n  'Морозовск': 'Ростовская область',\n  'Моршанск': 'Тамбовская область',\n  'Мосальск': 'Калужская область',\n  'Москва': 'Москва',\n  'Муравленко': 'Ямало-Ненецкий АО',\n  'Мураши': 'Кировская область',\n  'Мурино': 'Ленинградская область',\n  'Мурманск': 'Мурманская область',\n  'Муром': 'Владимирская область',\n  'Мценск': 'Орловская область',\n  'Мыски': 'Кемеровская область',\n  'Мытищи': 'Московская область',\n  'Мышкин': 'Ярославская область',\n  'Набережные Челны': 'Татарстан',\n  'Навашино': 'Нижегородская область',\n  'Наволоки': 'Ивановская область',\n  'Надым': 'Ямало-Ненецкий АО',\n  'Назарово': 'Красноярский край',\n  'Назрань': 'Ингушетия',\n  'Называевск': 'Омская область',\n  'Нальчик': 'Кабардино-Балкария',\n  'Нариманов': 'Астраханская область',\n  'Наро-Фоминск': 'Московская область',\n  'Нарткала': 'Кабардино-Балкария',\n  'Нарьян-Мар': 'Ненецкий АО',\n  'Находка': 'Приморский край',\n  'Невель': 'Псковская область',\n  'Невельск': 'Сахалинская область',\n  'Невинномысск': 'Ставропольский край',\n  'Невьянск': 'Свердловская область',\n  'Нелидово': 'Тверская область',\n  'Неман': 'Калининградская область',\n  'Нерехта': 'Костромская область',\n  'Нерчинск': 'Забайкальский край',\n  'Нерюнгри': 'Якутия',\n  'Нестеров': 'Калининградская область',\n  'Нефтегорск': 'Самарская область',\n  'Нефтекамск': 'Башкортостан',\n  'Нефтекумск': 'Ставропольский край',\n  'Нефтеюганск': 'Ханты-Мансийский АО — Югра',\n  'Нея': 'Костромская область',\n  'Нижневартовск': 'Ханты-Мансийский АО — Югра',\n  'Нижнекамск': 'Татарстан',\n  'Нижнеудинск': 'Иркутская область',\n  'Нижние Серги': 'Свердловская область',\n  'Нижний Ломов': 'Пензенская область',\n  'Нижний Новгород': 'Нижегородская область',\n  'Нижний Тагил': 'Свердловская область',\n  'Нижняя Салда': 'Свердловская область',\n  'Нижняя Тура': 'Свердловская область',\n  'Николаевск': 'Волгоградская область',\n  'Николаевск-на-Амуре': 'Хабаровский край',\n  'Никольск': 'Пензенская область',\n  'Никольское': 'Ленинградская область',\n  'Новая Ладога': 'Ленинградская область',\n  'Новая Ляля': 'Свердловская область',\n  'Новоалександровск': 'Ставропольский край',\n  'Новоалтайск': 'Алтайский край',\n  'Новоаннинский': 'Волгоградская область',\n  'Нововоронеж': 'Воронежская область',\n  'Новодвинск': 'Архангельская область',\n  'Новозыбков': 'Брянская область',\n  'Новокубанск': 'Краснодарский край',\n  'Новокузнецк': 'Кемеровская область',\n  'Новокуйбышевск': 'Самарская область',\n  'Новомичуринск': 'Рязанская область',\n  'Новомосковск': 'Тульская область',\n  'Новопавловск': 'Ставропольский край',\n  'Новоржев': 'Псковская область',\n  'Новороссийск': 'Краснодарский край',\n  'Новосибирск': 'Новосибирская область',\n  'Новосиль': 'Орловская область',\n  'Новосокольники': 'Псковская область',\n  'Новотроицк': 'Оренбургская область',\n  'Новоузенск': 'Саратовская область',\n  'Новоульяновск': 'Ульяновская область',\n  'Новоуральск': 'Свердловская область',\n  'Новохопёрск': 'Воронежская область',\n  'Новочебоксарск': 'Чувашия',\n  'Новочеркасск': 'Ростовская область',\n  'Новошахтинск': 'Ростовская область',\n  'Новый Оскол': 'Белгородская область',\n  'Новый Уренгой': 'Ямало-Ненецкий АО',\n  'Ногинск': 'Московская область',\n  'Нолинск': 'Кировская область',\n  'Норильск': 'Красноярский край',\n  'Ноябрьск': 'Ямало-Ненецкий АО',\n  'Нурлат': 'Татарстан',\n  'Нытва': 'Пермский край',\n  'Нюрба': 'Якутия',\n  'Нягань': 'Ханты-Мансийский АО — Югра',\n  'Нязепетровск': 'Челябинская область',\n  'Няндома': 'Архангельская область',\n  'Облучье': 'Еврейская АО',\n  'Обнинск': 'Калужская область',\n  'Обоянь': 'Курская область',\n  'Обь': 'Новосибирская область',\n  'Одинцово': 'Московская область',\n  'Озёрск': 'Челябинская область',\n  'Озёры': 'Московская область',\n  'Октябрьск': 'Самарская область',\n  'Октябрьский': 'Башкортостан',\n  'Окуловка': 'Новгородская область',\n  'Олёкминск': 'Якутия',\n  'Оленегорск': 'Мурманская область',\n  'Олонец': 'Карелия',\n  'Омск': 'Омская область',\n  'Омутнинск': 'Кировская область',\n  'Онега': 'Архангельская область',\n  'Опочка': 'Псковская область',\n  'Орёл': 'Орловская область',\n  'Оренбург': 'Оренбургская область',\n  'Орехово-Зуево': 'Московская область',\n  'Орлов': 'Кировская область',\n  'Орск': 'Оренбургская область',\n  'Оса': 'Пермский край',\n  'Осинники': 'Кемеровская область',\n  'Осташков': 'Тверская область',\n  'Остров': 'Псковская область',\n  'Островной': 'Мурманская область',\n  'Острогожск': 'Воронежская область',\n  'Отрадное': 'Ленинградская область',\n  'Отрадный': 'Самарская область',\n  'Оха': 'Сахалинская область',\n  'Оханск': 'Пермский край',\n  'Очёр': 'Пермский край',\n  'Павлово': 'Нижегородская область',\n  'Павловск': 'Воронежская область',\n  'Павловский Посад': 'Московская область',\n  'Палласовка': 'Волгоградская область',\n  'Партизанск': 'Приморский край',\n  'Певек': 'Чукотский АО',\n  'Пенза': 'Пензенская область',\n  'Первомайск': 'Нижегородская область',\n  'Первоуральск': 'Свердловская область',\n  'Перевоз': 'Нижегородская область',\n  'Пересвет': 'Московская область',\n  'Переславль-Залесский': 'Ярославская область',\n  'Пермь': 'Пермский край',\n  'Пестово': 'Новгородская область',\n  'Петров Вал': 'Волгоградская область',\n  'Петровск': 'Саратовская область',\n  'Петровск-Забайкальский': 'Забайкальский край',\n  'Петрозаводск': 'Карелия',\n  'Петропавловск-Камчатский': 'Камчатский край',\n  'Петухово': 'Курганская область',\n  'Петушки': 'Владимирская область',\n  'Печора': 'Коми',\n  'Печоры': 'Псковская область',\n  'Пикалёво': 'Ленинградская область',\n  'Пионерский': 'Калининградская область',\n  'Питкяранта': 'Карелия',\n  'Плавск': 'Тульская область',\n  'Пласт': 'Челябинская область',\n  'Плёс': 'Ивановская область',\n  'Поворино': 'Воронежская область',\n  'Подольск': 'Московская область',\n  'Подпорожье': 'Ленинградская область',\n  'Покачи': 'Ханты-Мансийский АО — Югра',\n  'Покров': 'Владимирская область',\n  'Покровск': 'Якутия',\n  'Полевской': 'Свердловская область',\n  'Полесск': 'Калининградская область',\n  'Полысаево': 'Кемеровская область',\n  'Полярные Зори': 'Мурманская область',\n  'Полярный': 'Мурманская область',\n  'Поронайск': 'Сахалинская область',\n  'Порхов': 'Псковская область',\n  'Похвистнево': 'Самарская область',\n  'Почеп': 'Брянская область',\n  'Починок': 'Смоленская область',\n  'Пошехонье': 'Ярославская область',\n  'Правдинск': 'Калининградская область',\n  'Приволжск': 'Ивановская область',\n  'Приморск': 'Ленинградская область',\n  'Приморско-Ахтарск': 'Краснодарский край',\n  'Приозерск': 'Ленинградская область',\n  'Прокопьевск': 'Кемеровская область',\n  'Пролетарск': 'Ростовская область',\n  'Протвино': 'Московская область',\n  'Прохладный': 'Кабардино-Балкария',\n  'Псков': 'Псковская область',\n  'Пугачёв': 'Саратовская область',\n  'Пудож': 'Карелия',\n  'Пустошка': 'Псковская область',\n  'Пучеж': 'Ивановская область',\n  'Пушкино': 'Московская область',\n  'Пущино': 'Московская область',\n  'Пыталово': 'Псковская область',\n  'Пыть-Ях': 'Ханты-Мансийский АО — Югра',\n  'Пятигорск': 'Ставропольский край',\n  'Радужный': 'Ханты-Мансийский АО — Югра',\n  'Райчихинск': 'Амурская область',\n  'Раменское': 'Московская область',\n  'Рассказово': 'Тамбовская область',\n  'Ревда': 'Свердловская область',\n  'Реж': 'Свердловская область',\n  'Реутов': 'Московская область',\n  'Ржев': 'Тверская область',\n  'Родники': 'Ивановская область',\n  'Рославль': 'Смоленская область',\n  'Россошь': 'Воронежская область',\n  'Ростов': 'Ярославская область',\n  'Ростов-на-Дону': 'Ростовская область',\n  'Рошаль': 'Московская область',\n  'Ртищево': 'Саратовская область',\n  'Рубцовск': 'Алтайский край',\n  'Рудня': 'Смоленская область',\n  'Руза': 'Московская область',\n  'Рузаевка': 'Мордовия',\n  'Рыбинск': 'Ярославская область',\n  'Рыбное': 'Рязанская область',\n  'Рыльск': 'Курская область',\n  'Ряжск': 'Рязанская область',\n  'Рязань': 'Рязанская область',\n  'Саки': 'Крым',\n  'Салават': 'Башкортостан',\n  'Салаир': 'Кемеровская область',\n  'Салехард': 'Ямало-Ненецкий АО',\n  'Сальск': 'Ростовская область',\n  'Самара': 'Самарская область',\n  'Санкт-Петербург': 'Санкт-Петербург',\n  'Саранск': 'Мордовия',\n  'Сарапул': 'Удмуртия',\n  'Саратов': 'Саратовская область',\n  'Саров': 'Нижегородская область',\n  'Сасово': 'Рязанская область',\n  'Сатка': 'Челябинская область',\n  'Сафоново': 'Смоленская область',\n  'Саяногорск': 'Хакасия',\n  'Саянск': 'Иркутская область',\n  'Светлогорск': 'Калининградская область',\n  'Светлоград': 'Ставропольский край',\n  'Светлый': 'Калининградская область',\n  'Светогорск': 'Ленинградская область',\n  'Свирск': 'Иркутская область',\n  'Свободный': 'Амурская область',\n  'Себеж': 'Псковская область',\n  'Севастополь': 'Севастополь',\n  'Северо-Курильск': 'Сахалинская область',\n  'Северобайкальск': 'Бурятия',\n  'Северодвинск': 'Архангельская область',\n  'Североморск': 'Мурманская область',\n  'Североуральск': 'Свердловская область',\n  'Северск': 'Томская область',\n  'Севск': 'Брянская область',\n  'Сегежа': 'Карелия',\n  'Сельцо': 'Брянская область',\n  'Семёнов': 'Нижегородская область',\n  'Семикаракорск': 'Ростовская область',\n  'Семилуки': 'Воронежская область',\n  'Сенгилей': 'Ульяновская область',\n  'Серафимович': 'Волгоградская область',\n  'Сергач': 'Нижегородская область',\n  'Сергиев Посад': 'Московская область',\n  'Сердобск': 'Пензенская область',\n  'Серов': 'Свердловская область',\n  'Серпухов': 'Московская область',\n  'Сертолово': 'Ленинградская область',\n  'Сибай': 'Башкортостан',\n  'Сим': 'Челябинская область',\n  'Симферополь': 'Крым',\n  'Сковородино': 'Амурская область',\n  'Скопин': 'Рязанская область',\n  'Славгород': 'Алтайский край',\n  'Славск': 'Калининградская область',\n  'Славянск-на-Кубани': 'Краснодарский край',\n  'Сланцы': 'Ленинградская область',\n  'Слободской': 'Кировская область',\n  'Слюдянка': 'Иркутская область',\n  'Смоленск': 'Смоленская область',\n  'Снежинск': 'Челябинская область',\n  'Снежногорск': 'Мурманская область',\n  'Собинка': 'Владимирская область',\n  'Советск': 'Тульская область',\n  'Советская Гавань': 'Хабаровский край',\n  'Советский': 'Ханты-Мансийский АО — Югра',\n  'Сокол': 'Вологодская область',\n  'Солигалич': 'Костромская область',\n  'Соликамск': 'Пермский край',\n  'Солнечногорск': 'Московская область',\n  'Соль-Илецк': 'Оренбургская область',\n  'Сольвычегодск': 'Архангельская область',\n  'Сольцы': 'Новгородская область',\n  'Сорочинск': 'Оренбургская область',\n  'Сорск': 'Хакасия',\n  'Сортавала': 'Карелия',\n  'Сосенский': 'Калужская область',\n  'Сосновка': 'Кировская область',\n  'Сосновоборск': 'Красноярский край',\n  'Сосновый Бор': 'Ленинградская область',\n  'Сосногорск': 'Коми',\n  'Сочи': 'Краснодарский край',\n  'Спас-Деменск': 'Калужская область',\n  'Спас-Клепики': 'Рязанская область',\n  'Спасск': 'Пензенская область',\n  'Спасск-Дальний': 'Приморский край',\n  'Спасск-Рязанский': 'Рязанская область',\n  'Среднеколымск': 'Якутия',\n  'Среднеуральск': 'Свердловская область',\n  'Сретенск': 'Забайкальский край',\n  'Ставрополь': 'Ставропольский край',\n  'Старая Купавна': 'Московская область',\n  'Старая Русса': 'Новгородская область',\n  'Старица': 'Тверская область',\n  'Стародуб': 'Брянская область',\n  'Старый Крым': 'Крым',\n  'Старый Оскол': 'Белгородская область',\n  'Стерлитамак': 'Башкортостан',\n  'Стрежевой': 'Томская область',\n  'Строитель': 'Белгородская область',\n  'Струнино': 'Владимирская область',\n  'Ступино': 'Московская область',\n  'Суворов': 'Тульская область',\n  'Судак': 'Крым',\n  'Суджа': 'Курская область',\n  'Судогда': 'Владимирская область',\n  'Суздаль': 'Владимирская область',\n  'Сунжа': 'Ингушетия',\n  'Суоярви': 'Карелия',\n  'Сураж': 'Брянская область',\n  'Сургут': 'Ханты-Мансийский АО — Югра',\n  'Суровикино': 'Волгоградская область',\n  'Сурск': 'Пензенская область',\n  'Сусуман': 'Магаданская область',\n  'Сухиничи': 'Калужская область',\n  'Сухой Лог': 'Свердловская область',\n  'Сызрань': 'Самарская область',\n  'Сыктывкар': 'Коми',\n  'Сысерть': 'Свердловская область',\n  'Сычёвка': 'Смоленская область',\n  'Сясьстрой': 'Ленинградская область',\n  'Тавда': 'Свердловская область',\n  'Таганрог': 'Ростовская область',\n  'Тайга': 'Кемеровская область',\n  'Тайшет': 'Иркутская область',\n  'Талдом': 'Московская область',\n  'Талица': 'Свердловская область',\n  'Тамбов': 'Тамбовская область',\n  'Тара': 'Омская область',\n  'Тарко-Сале': 'Ямало-Ненецкий АО',\n  'Таруса': 'Калужская область',\n  'Татарск': 'Новосибирская область',\n  'Таштагол': 'Кемеровская область',\n  'Тверь': 'Тверская область',\n  'Теберда': 'Карачаево-Черкесия',\n  'Тейково': 'Ивановская область',\n  'Темников': 'Мордовия',\n  'Темрюк': 'Краснодарский край',\n  'Терек': 'Кабардино-Балкария',\n  'Тетюши': 'Татарстан',\n  'Тимашёвск': 'Краснодарский край',\n  'Тихвин': 'Ленинградская область',\n  'Тихорецк': 'Краснодарский край',\n  'Тобольск': 'Тюменская область',\n  'Тогучин': 'Новосибирская область',\n  'Тольятти': 'Самарская область',\n  'Томари': 'Сахалинская область',\n  'Томмот': 'Якутия',\n  'Томск': 'Томская область',\n  'Топки': 'Кемеровская область',\n  'Торжок': 'Тверская область',\n  'Торопец': 'Тверская область',\n  'Тосно': 'Ленинградская область',\n  'Тотьма': 'Вологодская область',\n  'Трёхгорный': 'Челябинская область',\n  'Троицк': 'Челябинская область',\n  'Трубчевск': 'Брянская область',\n  'Туапсе': 'Краснодарский край',\n  'Туймазы': 'Башкортостан',\n  'Тула': 'Тульская область',\n  'Тулун': 'Иркутская область',\n  'Туран': 'Тыва',\n  'Туринск': 'Свердловская область',\n  'Тутаев': 'Ярославская область',\n  'Тында': 'Амурская область',\n  'Тырныауз': 'Кабардино-Балкария',\n  'Тюкалинск': 'Омская область',\n  'Тюмень': 'Тюменская область',\n  'Уварово': 'Тамбовская область',\n  'Углегорск': 'Сахалинская область',\n  'Углич': 'Ярославская область',\n  'Удачный': 'Якутия',\n  'Удомля': 'Тверская область',\n  'Ужур': 'Красноярский край',\n  'Узловая': 'Тульская область',\n  'Улан-Удэ': 'Бурятия',\n  'Ульяновск': 'Ульяновская область',\n  'Унеча': 'Брянская область',\n  'Урай': 'Ханты-Мансийский АО — Югра',\n  'Урень': 'Нижегородская область',\n  'Уржум': 'Кировская область',\n  'Урус-Мартан': 'Чечня',\n  'Урюпинск': 'Волгоградская область',\n  'Усинск': 'Коми',\n  'Усмань': 'Липецкая область',\n  'Усолье': 'Пермский край',\n  'Усолье-Сибирское': 'Иркутская область',\n  'Уссурийск': 'Приморский край',\n  'Усть-Джегута': 'Карачаево-Черкесия',\n  'Усть-Илимск': 'Иркутская область',\n  'Усть-Катав': 'Челябинская область',\n  'Усть-Кут': 'Иркутская область',\n  'Усть-Лабинск': 'Краснодарский край',\n  'Устюжна': 'Вологодская область',\n  'Уфа': 'Башкортостан',\n  'Ухта': 'Коми',\n  'Учалы': 'Башкортостан',\n  'Уяр': 'Красноярский край',\n  'Фатеж': 'Курская область',\n  'Феодосия': 'Крым',\n  'Фокино': 'Приморский край',\n  'Фролово': 'Волгоградская область',\n  'Фрязино': 'Московская область',\n  'Фурманов': 'Ивановская область',\n  'Хабаровск': 'Хабаровский край',\n  'Хадыженск': 'Краснодарский край',\n  'Ханты-Мансийск': 'Ханты-Мансийский АО — Югра',\n  'Харабали': 'Астраханская область',\n  'Харовск': 'Вологодская область',\n  'Хасавюрт': 'Дагестан',\n  'Хвалынск': 'Саратовская область',\n  'Хилок': 'Забайкальский край',\n  'Химки': 'Московская область',\n  'Холм': 'Новгородская область',\n  'Холмск': 'Сахалинская область',\n  'Хотьково': 'Московская область',\n  'Цивильск': 'Чувашия',\n  'Цимлянск': 'Ростовская область',\n  'Циолковский': 'Амурская область',\n  'Чадан': 'Тыва',\n  'Чайковский': 'Пермский край',\n  'Чапаевск': 'Самарская область',\n  'Чаплыгин': 'Липецкая область',\n  'Чебаркуль': 'Челябинская область',\n  'Чебоксары': 'Чувашия',\n  'Чегем': 'Кабардино-Балкария',\n  'Чекалин': 'Тульская область',\n  'Челябинск': 'Челябинская область',\n  'Чердынь': 'Пермский край',\n  'Черемхово': 'Иркутская область',\n  'Черепаново': 'Новосибирская область',\n  'Череповец': 'Вологодская область',\n  'Черкесск': 'Карачаево-Черкесия',\n  'Чёрмоз': 'Пермский край',\n  'Черноголовка': 'Московская область',\n  'Черногорск': 'Хакасия',\n  'Чернушка': 'Пермский край',\n  'Черняховск': 'Калининградская область',\n  'Чехов': 'Московская область',\n  'Чистополь': 'Татарстан',\n  'Чита': 'Забайкальский край',\n  'Чкаловск': 'Нижегородская область',\n  'Чудово': 'Новгородская область',\n  'Чулым': 'Новосибирская область',\n  'Чусовой': 'Пермский край',\n  'Чухлома': 'Костромская область',\n  'Шагонар': 'Тыва',\n  'Шадринск': 'Курганская область',\n  'Шали': 'Чечня',\n  'Шарыпово': 'Красноярский край',\n  'Шарья': 'Костромская область',\n  'Шатура': 'Московская область',\n  'Шахты': 'Ростовская область',\n  'Шахунья': 'Нижегородская область',\n  'Шацк': 'Рязанская область',\n  'Шебекино': 'Белгородская область',\n  'Шелехов': 'Иркутская область',\n  'Шенкурск': 'Архангельская область',\n  'Шилка': 'Забайкальский край',\n  'Шимановск': 'Амурская область',\n  'Шиханы': 'Саратовская область',\n  'Шлиссельбург': 'Ленинградская область',\n  'Шумерля': 'Чувашия',\n  'Шумиха': 'Курганская область',\n  'Шуя': 'Ивановская область',\n  'Щёкино': 'Тульская область',\n  'Щёлкино': 'Крым',\n  'Щёлково': 'Московская область',\n  'Щигры': 'Курская область',\n  'Щучье': 'Курганская область',\n  'Электрогорск': 'Московская область',\n  'Электросталь': 'Московская область',\n  'Электроугли': 'Московская область',\n  'Элиста': 'Калмыкия',\n  'Энгельс': 'Саратовская область',\n  'Эртиль': 'Воронежская область',\n  'Югорск': 'Ханты-Мансийский АО — Югра',\n  'Южа': 'Ивановская область',\n  'Южно-Сахалинск': 'Сахалинская область',\n  'Южно-Сухокумск': 'Дагестан',\n  'Южноуральск': 'Челябинская область',\n  'Юрга': 'Кемеровская область',\n  'Юрьев-Польский': 'Владимирская область',\n  'Юрьевец': 'Ивановская область',\n  'Юрюзань': 'Челябинская область',\n  'Юхнов': 'Калужская область',\n  'Ядрин': 'Чувашия',\n  'Якутск': 'Якутия',\n  'Ялта': 'Крым',\n  'Ялуторовск': 'Тюменская область',\n  'Янаул': 'Башкортостан',\n  'Яранск': 'Кировская область',\n  'Яровое': 'Алтайский край',\n  'Ярославль': 'Ярославская область',\n  'Ярцево': 'Смоленская область',\n  'Ясногорск': 'Тульская область',\n  'Ясный': 'Оренбургская область',\n  'Яхрома': 'Московская область'\n};\n\n\n//# sourceURL=webpack:///./js/utils/locations.js?")},"./js/utils/modal.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupModal\", function() { return setupModal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openModal\", function() { return openModal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closeModal\", function() { return closeModal; });\n/* harmony import */ var _scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scroll-lock */ \"./js/utils/scroll-lock.js\");\n\n\nvar openModal = function openModal(modal, callback, modalFormValidation, btn) {\n  if (!modal.classList.contains('modal--active')) {\n    modal.classList.add('modal--active');\n\n    if (callback) {\n      callback(modalFormValidation, btn, modal);\n    }\n\n    setTimeout(_scroll_lock__WEBPACK_IMPORTED_MODULE_0__[\"disableScrolling\"], 400);\n  }\n};\n\nvar closeModal = function closeModal(modal, callback, modalFormValidation) {\n  if (modal.classList.contains('modal--active')) {\n    modal.classList.remove('modal--active');\n\n    if (callback) {\n      callback(modal, modalFormValidation);\n    }\n\n    setTimeout(_scroll_lock__WEBPACK_IMPORTED_MODULE_0__[\"enableScrolling\"], 200);\n  }\n};\n\nvar onEscPress = function onEscPress(evt, modal, callback, modalFormValidation) {\n  var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';\n\n  if (isEscKey && modal.classList.contains('modal--active')) {\n    evt.preventDefault();\n    closeModal(modal, callback, modalFormValidation);\n  }\n};\n\nvar setModalListeners = function setModalListeners(modal, closeCallback, modalFormValidation) {\n  var overlay = modal.querySelector('.modal__overlay');\n  var closeBtns = modal.querySelectorAll('.modal__close-btn');\n  closeBtns.forEach(function (closeBtn) {\n    closeBtn.addEventListener('click', function () {\n      closeModal(modal, closeCallback, modalFormValidation);\n    });\n  });\n  overlay.addEventListener('click', function () {\n    closeModal(modal, closeCallback, modalFormValidation);\n  });\n  document.addEventListener('keydown', function (evt) {\n    onEscPress(evt, modal, closeCallback, modalFormValidation);\n  });\n};\n\nvar setupModal = function setupModal(modal, closeCallback, openModalBtns, openCallback, noPrevDefault, modalFormValidation) {\n  if (openModalBtns) {\n    openModalBtns.forEach(function (btn) {\n      btn.addEventListener('click', function (evt) {\n        if (!noPrevDefault) {\n          evt.preventDefault();\n        }\n\n        openModal(modal, openCallback, modalFormValidation, btn);\n      });\n    });\n  }\n\n  setModalListeners(modal, closeCallback, modalFormValidation);\n};\n\n\n\n//# sourceURL=webpack:///./js/utils/modal.js?")},"./js/utils/phone-mask.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initPhoneMask\", function() { return initPhoneMask; });\nvar MASK = '+1 (111) 111-11-11';\n\nvar initPhoneMask = function initPhoneMask() {\n  var phoneInputs = document.querySelectorAll('input[type=\"tel\"]');\n\n  if (phoneInputs) {\n    phoneInputs.forEach(function (phoneInput) {\n      return phoneInput.addEventListener('keydown', function (event) {\n        var currentString = phoneInput.value;\n        var currentLength = currentString.length;\n\n        if (!(event.key === 'ArrowLeft' || event.key === 'ArrowRight' || event.key === 'Backspace' || event.key === 'Tab')) {\n          event.preventDefault();\n        }\n\n        if (/[0-9\\+\\ \\-\\(\\)]/.test(event.key)) {\n          if (/[0-9]/.test(event.key)) {\n            if (MASK[currentLength] === '1') {\n              phoneInput.value = currentString + event.key;\n            } else {\n              for (var i = currentLength; i < MASK.length; i++) {\n                if (MASK[i] === '1') {\n                  phoneInput.value = currentString + event.key;\n                  break;\n                }\n\n                currentString += MASK[i];\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n};\n\n\n\n//# sourceURL=webpack:///./js/utils/phone-mask.js?")},"./js/utils/scroll-lock.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableScrolling\", function() { return disableScrolling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableScrolling\", function() { return enableScrolling; });\nvar body = document.querySelector('body'); // eslint-disable-next-line consistent-return\n\nvar getScrollbarWidth = function getScrollbarWidth() {\n  var outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.overflow = 'scroll';\n  outer.style.msOverflowStyle = 'scrollbar';\n  body.appendChild(outer);\n  var inner = document.createElement('div');\n  outer.appendChild(inner);\n  var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n  outer.parentNode.removeChild(outer);\n\n  if (body.offsetHeight > window.innerHeight) {\n    return scrollbarWidth;\n  }\n};\n\nvar getBodyScrollTop = function getBodyScrollTop() {\n  return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || body && body.scrollTop;\n};\n\nvar disableScrolling = function disableScrolling(noScrollbar) {\n  if (!noScrollbar) {\n    var scrollWidth = getScrollbarWidth();\n    body.setAttribute('style', \"padding-right: \".concat(scrollWidth, \"px;\"));\n  }\n\n  body.dataset.scrollY = \"\".concat(getBodyScrollTop());\n  body.style.top = \"-\".concat(body.dataset.scrollY, \"px\");\n  body.classList.add('scroll-lock');\n};\n\nvar enableScrolling = function enableScrolling() {\n  body.removeAttribute('style');\n  body.classList.remove('scroll-lock');\n  window.scrollTo(0, +body.dataset.scrollY);\n};\n\n\n\n//# sourceURL=webpack:///./js/utils/scroll-lock.js?")}});